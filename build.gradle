buildscript {
	ext {
		jooqVersion = '3.19.25'
	}

}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'nu.studer.jooq' version '9.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'test project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation "org.jooq:jooq:${jooqVersion}"
	implementation ('org.springframework.boot:spring-boot-starter-jooq') {
		exclude group: 'org.jooq:jooq'
	}

	jooqGenerator 'org.mariadb.jdbc:mariadb-java-client'
	jooqGenerator "org.jooq:jooq:${jooqVersion}"
	jooqGenerator "org.jooq:jooq-meta:${jooqVersion}"
	
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
	useJUnitPlatform()
}

String dbHost = findProperty("DB_HOST")
String dbPort = findProperty("DB_PORT")
String dbSchema = findProperty("DB_SCHEMA")
String dbUser = findProperty("DB_USER")
String dbPass = findProperty("DB_PASS")

jooq {
	version = "${jooqVersion}"
	configurations {
		songseunghyeopDB {
			generationTool {
				jdbc {
					driver = 'org.mariadb.jdbc.Driver'
					url = "jdbc:mariadb://${dbHost}:${dbPort}"
					user = "${dbUser}"
					password = "${dbPass}"
				}

				generator {
					name = 'org.jooq.codegen.DefaultGenerator'

					database {
						name = 'org.jooq.meta.mariadb.MariaDBDatabase'

						schemata {
							schema {
								inputSchema = "${dbSchema}"
							}
						}

						forcedTypes {
							forcedType {
								name = 'BOOLEAN'
								includeTypes = '(?i:(TINY|SMALL|MEDIUM|BIG)?INT(UNSIGNED)?\\(1\\))'
							}
						}
					}

					generate {
						daos = true
						records = true
						pojos = true
						immutablePojos = true
						fluentSetters = true
						javaTimeTypes = true
						deprecated = false
					}

					target {
						packageName = "${group}.jooq.generated"
						directory   = 'src/generated'
						clean       = true
					}
				}
			}
		}
	}

	sourceSets {
		main {
			java {
				srcDirs = ["src/main/java", "src/generated"]
			}
		}
	}
}