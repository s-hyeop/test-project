/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Users implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer userNo;
    private final String email;
    private final String password;
    private final String userName;
    private final String role;
    private final LocalDateTime createdAt;
    private final LocalDateTime deletedAt;
    private final LocalDateTime lastLoginAt;

    public Users(Users value) {
        this.userNo = value.userNo;
        this.email = value.email;
        this.password = value.password;
        this.userName = value.userName;
        this.role = value.role;
        this.createdAt = value.createdAt;
        this.deletedAt = value.deletedAt;
        this.lastLoginAt = value.lastLoginAt;
    }

    public Users(
        Integer userNo,
        String email,
        String password,
        String userName,
        String role,
        LocalDateTime createdAt,
        LocalDateTime deletedAt,
        LocalDateTime lastLoginAt
    ) {
        this.userNo = userNo;
        this.email = email;
        this.password = password;
        this.userName = userName;
        this.role = role;
        this.createdAt = createdAt;
        this.deletedAt = deletedAt;
        this.lastLoginAt = lastLoginAt;
    }

    /**
     * Getter for <code>songseunghyeop.users.user_no</code>.
     */
    public Integer getUserNo() {
        return this.userNo;
    }

    /**
     * Getter for <code>songseunghyeop.users.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Getter for <code>songseunghyeop.users.password</code>.
     */
    public String getPassword() {
        return this.password;
    }

    /**
     * Getter for <code>songseunghyeop.users.user_name</code>.
     */
    public String getUserName() {
        return this.userName;
    }

    /**
     * Getter for <code>songseunghyeop.users.role</code>.
     */
    public String getRole() {
        return this.role;
    }

    /**
     * Getter for <code>songseunghyeop.users.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>songseunghyeop.users.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return this.deletedAt;
    }

    /**
     * Getter for <code>songseunghyeop.users.last_login_at</code>.
     */
    public LocalDateTime getLastLoginAt() {
        return this.lastLoginAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Users other = (Users) obj;
        if (this.userNo == null) {
            if (other.userNo != null)
                return false;
        }
        else if (!this.userNo.equals(other.userNo))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.password == null) {
            if (other.password != null)
                return false;
        }
        else if (!this.password.equals(other.password))
            return false;
        if (this.userName == null) {
            if (other.userName != null)
                return false;
        }
        else if (!this.userName.equals(other.userName))
            return false;
        if (this.role == null) {
            if (other.role != null)
                return false;
        }
        else if (!this.role.equals(other.role))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.deletedAt == null) {
            if (other.deletedAt != null)
                return false;
        }
        else if (!this.deletedAt.equals(other.deletedAt))
            return false;
        if (this.lastLoginAt == null) {
            if (other.lastLoginAt != null)
                return false;
        }
        else if (!this.lastLoginAt.equals(other.lastLoginAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.userNo == null) ? 0 : this.userNo.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.userName == null) ? 0 : this.userName.hashCode());
        result = prime * result + ((this.role == null) ? 0 : this.role.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.deletedAt == null) ? 0 : this.deletedAt.hashCode());
        result = prime * result + ((this.lastLoginAt == null) ? 0 : this.lastLoginAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Users (");

        sb.append(userNo);
        sb.append(", ").append(email);
        sb.append(", ").append(password);
        sb.append(", ").append(userName);
        sb.append(", ").append(role);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(deletedAt);
        sb.append(", ").append(lastLoginAt);

        sb.append(")");
        return sb.toString();
    }
}
