/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.records;


import com.example.jooq.tables.JUsers;
import com.example.jooq.tables.pojos.Users;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>songseunghyeop.users.user_no</code>.
     */
    public UsersRecord setUserNo(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>songseunghyeop.users.user_no</code>.
     */
    public Integer getUserNo() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>songseunghyeop.users.email</code>.
     */
    public UsersRecord setEmail(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>songseunghyeop.users.email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>songseunghyeop.users.password</code>.
     */
    public UsersRecord setPassword(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>songseunghyeop.users.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>songseunghyeop.users.user_name</code>.
     */
    public UsersRecord setUserName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>songseunghyeop.users.user_name</code>.
     */
    public String getUserName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>songseunghyeop.users.role</code>.
     */
    public UsersRecord setRole(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>songseunghyeop.users.role</code>.
     */
    public String getRole() {
        return (String) get(4);
    }

    /**
     * Setter for <code>songseunghyeop.users.created_at</code>.
     */
    public UsersRecord setCreatedAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>songseunghyeop.users.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>songseunghyeop.users.deleted_at</code>.
     */
    public UsersRecord setDeletedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>songseunghyeop.users.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>songseunghyeop.users.last_login_at</code>.
     */
    public UsersRecord setLastLoginAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>songseunghyeop.users.last_login_at</code>.
     */
    public LocalDateTime getLastLoginAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(JUsers.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Integer userNo, String email, String password, String userName, String role, LocalDateTime createdAt, LocalDateTime deletedAt, LocalDateTime lastLoginAt) {
        super(JUsers.USERS);

        setUserNo(userNo);
        setEmail(email);
        setPassword(password);
        setUserName(userName);
        setRole(role);
        setCreatedAt(createdAt);
        setDeletedAt(deletedAt);
        setLastLoginAt(lastLoginAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Users value) {
        super(JUsers.USERS);

        if (value != null) {
            setUserNo(value.getUserNo());
            setEmail(value.getEmail());
            setPassword(value.getPassword());
            setUserName(value.getUserName());
            setRole(value.getRole());
            setCreatedAt(value.getCreatedAt());
            setDeletedAt(value.getDeletedAt());
            setLastLoginAt(value.getLastLoginAt());
            resetChangedOnNotNull();
        }
    }
}
